@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 100%;

  --foreground: 220 5% 15%;

  --border: 220 8% 88%;

  --card: 0 0% 98%;

  --card-foreground: 220 5% 18%;

  --card-border: 220 8% 92%;

  --sidebar: 0 0% 96%;

  --sidebar-foreground: 220 5% 18%;

  --sidebar-border: 220 8% 90%;

  --sidebar-primary: 275 70% 55%;

  --sidebar-primary-foreground: 200 10% 98%;

  --sidebar-accent: 220 6% 88%;

  --sidebar-accent-foreground: 220 5% 20%;

  --sidebar-ring: 275 70% 55%;

  --popover: 220 4% 94%;

  --popover-foreground: 220 5% 18%;

  --popover-border: 220 8% 86%;

  --primary: 275 70% 55%;

  --primary-foreground: 200 10% 98%;

  --secondary: 220 6% 90%;

  --secondary-foreground: 220 5% 22%;

  --muted: 220 8% 92%;

  --muted-foreground: 220 5% 40%;

  --accent: 220 10% 90%;

  --accent-foreground: 220 5% 20%;

  --destructive: 0 84% 50%;

  --destructive-foreground: 0 10% 98%;

  --input: 220 8% 70%;
  --ring: 275 70% 55%;
  --chart-1: 195 100% 50%;
  --chart-2: 142 76% 55%;
  --chart-3: 38 92% 50%;
  --chart-4: 275 70% 55%;
  --chart-5: 25 85% 50%;

  --font-sans: 'Inter', system-ui, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: 'JetBrains Mono', 'Fira Code', monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 1px 2px 0px hsl(220 8% 15% / 0.03);
  --shadow-xs: 0px 1px 3px 0px hsl(220 8% 15% / 0.04);
  --shadow-sm: 0px 2px 4px -1px hsl(220 8% 15% / 0.06), 0px 1px 2px -1px hsl(220 8% 15% / 0.03);
  --shadow: 0px 4px 6px -1px hsl(220 8% 15% / 0.08), 0px 2px 4px -2px hsl(220 8% 15% / 0.04);
  --shadow-md: 0px 6px 12px -2px hsl(220 8% 15% / 0.10), 0px 3px 6px -3px hsl(220 8% 15% / 0.05);
  --shadow-lg: 0px 10px 20px -4px hsl(220 8% 15% / 0.12), 0px 4px 8px -4px hsl(220 8% 15% / 0.06);
  --shadow-xl: 0px 20px 40px -8px hsl(220 8% 15% / 0.14), 0px 8px 16px -8px hsl(220 8% 15% / 0.07);
  --shadow-2xl: 0px 30px 60px -12px hsl(220 8% 15% / 0.16);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 222 47% 4%;

  --foreground: 210 40% 98%;

  --border: 217 33% 17%;

  --card: 222 47% 6%;

  --card-foreground: 210 40% 98%;

  --card-border: 217 33% 14%;

  --sidebar: 222 47% 5%;

  --sidebar-foreground: 210 40% 98%;

  --sidebar-border: 217 33% 15%;

  --sidebar-primary: 275 70% 60%;

  --sidebar-primary-foreground: 210 40% 98%;

  --sidebar-accent: 222 47% 10%;

  --sidebar-accent-foreground: 210 40% 98%;

  --sidebar-ring: 195 100% 50%;

  --popover: 222 47% 8%;

  --popover-foreground: 210 40% 98%;

  --popover-border: 217 33% 16%;

  --primary: 195 100% 50%;

  --primary-foreground: 222 47% 4%;

  --secondary: 217 33% 16%;

  --secondary-foreground: 210 40% 98%;

  --muted: 217 33% 18%;

  --muted-foreground: 215 20% 65%;

  --accent: 275 70% 60%;

  --accent-foreground: 210 40% 98%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 210 40% 98%;

  --input: 217 33% 25%;
  --ring: 195 100% 50%;
  --chart-1: 195 100% 50%;
  --chart-2: 142 76% 55%;
  --chart-3: 38 92% 60%;
  --chart-4: 275 70% 60%;
  --chart-5: 290 70% 65%;

  --shadow-2xs: 0px 1px 2px 0px hsl(220 20% 0% / 0.15);
  --shadow-xs: 0px 1px 3px 0px hsl(220 20% 0% / 0.20);
  --shadow-sm: 0px 2px 4px -1px hsl(220 20% 0% / 0.25), 0px 1px 2px -1px hsl(220 20% 0% / 0.15);
  --shadow: 0px 4px 6px -1px hsl(220 20% 0% / 0.30), 0px 2px 4px -2px hsl(220 20% 0% / 0.20);
  --shadow-md: 0px 6px 12px -2px hsl(220 20% 0% / 0.35), 0px 3px 6px -3px hsl(220 20% 0% / 0.25);
  --shadow-lg: 0px 10px 20px -4px hsl(220 20% 0% / 0.40), 0px 4px 8px -4px hsl(220 20% 0% / 0.30);
  --shadow-xl: 0px 20px 40px -8px hsl(220 20% 0% / 0.45), 0px 8px 16px -8px hsl(220 20% 0% / 0.35);
  --shadow-2xl: 0px 30px 60px -12px hsl(220 20% 0% / 0.50);

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Glassmorphism Effects */
  .glass {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .glass-card {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.08) 0%, rgba(255, 255, 255, 0.03) 100%);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
  }

  /* Neon Glow Effects */
  .glow-primary {
    box-shadow: 0 0 10px rgba(0, 212, 255, 0.2),
                0 0 20px rgba(0, 212, 255, 0.1),
                0 0 40px rgba(0, 212, 255, 0.05);
  }

  .glow-accent {
    box-shadow: 0 0 10px rgba(147, 51, 234, 0.2),
                0 0 20px rgba(147, 51, 234, 0.1),
                0 0 40px rgba(147, 51, 234, 0.05);
  }

  .glow-success {
    box-shadow: 0 0 10px rgba(34, 197, 94, 0.2),
                0 0 20px rgba(34, 197, 94, 0.1);
  }

  /* Gradient Backgrounds */
  .gradient-mesh {
    background: radial-gradient(at 27% 37%, hsla(215, 98%, 61%, 0.15) 0px, transparent 50%),
                radial-gradient(at 97% 21%, hsla(275, 70%, 60%, 0.15) 0px, transparent 50%),
                radial-gradient(at 52% 99%, hsla(195, 100%, 50%, 0.1) 0px, transparent 50%),
                radial-gradient(at 10% 29%, hsla(290, 70%, 65%, 0.1) 0px, transparent 50%),
                radial-gradient(at 97% 96%, hsla(195, 100%, 50%, 0.15) 0px, transparent 50%),
                radial-gradient(at 33% 50%, hsla(275, 70%, 60%, 0.1) 0px, transparent 50%),
                radial-gradient(at 79% 53%, hsla(195, 100%, 50%, 0.1) 0px, transparent 50%);
  }

  /* Animated Shimmer */
  @keyframes shimmer {
    0% {
      background-position: -1000px 0;
    }
    100% {
      background-position: 1000px 0;
    }
  }

  .shimmer {
    animation: shimmer 2s infinite linear;
    background: linear-gradient(to right, transparent 0%, rgba(255,255,255,0.1) 50%, transparent 100%);
    background-size: 1000px 100%;
  }

  /* Pulse Glow Animation */
  @keyframes pulse-glow {
    0%, 100% {
      box-shadow: 0 0 10px rgba(0, 212, 255, 0.15);
    }
    50% {
      box-shadow: 0 0 20px rgba(0, 212, 255, 0.3),
                  0 0 35px rgba(0, 212, 255, 0.15);
    }
  }

  .pulse-glow {
    animation: pulse-glow 2s ease-in-out infinite;
  }

  /* Floating Animation */
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .float {
    animation: float 3s ease-in-out infinite;
  }

  /* Holographic Effect */
  .holographic {
    background: linear-gradient(135deg, 
      rgba(0, 212, 255, 0.1) 0%,
      rgba(147, 51, 234, 0.1) 25%,
      rgba(0, 212, 255, 0.1) 50%,
      rgba(147, 51, 234, 0.1) 75%,
      rgba(0, 212, 255, 0.1) 100%);
    background-size: 200% 200%;
    animation: holographic-shift 3s ease infinite;
  }

  @keyframes holographic-shift {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }

  /* Neon Border */
  .neon-border {
    position: relative;
    border: 1px solid rgba(0, 212, 255, 0.5);
  }

  .neon-border::before {
    content: '';
    position: absolute;
    inset: -2px;
    background: linear-gradient(45deg, 
      transparent 0%,
      rgba(0, 212, 255, 0.5) 50%,
      transparent 100%);
    border-radius: inherit;
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
    z-index: -1;
  }

  .neon-border:hover::before {
    opacity: 1;
  }

  /* Grid Pattern Background */
  .grid-pattern {
    background-image: 
      linear-gradient(rgba(0, 212, 255, 0.03) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 212, 255, 0.03) 1px, transparent 1px);
    background-size: 50px 50px;
  }
}